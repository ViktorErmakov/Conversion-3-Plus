
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ИзвлечьИсходники() Экспорт
	
	НачатьПолучениеКаталогаВременныхФайлов(Новый ОписаниеОповещения("ПриПолученииКаталогаВременныхФайлов", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ИнициализацияРедактора(ВнешнийОбъект, РеквизитОбъекта) Экспорт
	
	Инфо = Новый СистемнаяИнформация();
	ВнешнийОбъект.init(Инфо.ВерсияПриложения);
	
	// Очистим элемент от предыдущих значений.
	ВнешнийОбъект.eraseText();
	// Прочитаем текст из реквизита.
	ВнешнийОбъект.setText(РеквизитОбъекта);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВыборКонвертации(Форма, СписокКонвертаций) Экспорт
	
	Оповещение = Новый ОписаниеОповещения("ВыборКонфигурацииКонсоли", Форма);
	ТекстВопроса = НСтр("ru = 'Какую конвертацию использовать в консоли кода?'");
	
	СписокКнопок = Новый СписокЗначений;
	Для Каждого Конвертация Из СписокКонвертаций Цикл
		Индекс = СписокКонвертаций.Индекс(Конвертация);
		СписокКнопок.Добавить(Индекс, Строка(Конвертация.Значение));
	КонецЦикла;
	
	ТекстЗаголовка = НСтр("ru = 'bsl консоль'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, СписокКнопок, , Неопределено, ТекстЗаголовка);
	
КонецПроцедуры

&НаКлиенте
Процедура СменитьТему(Форма, КонсольКода, СветлаяТема) Экспорт
	
	СветлаяТема = Не СветлаяТема;
	ИмяКнопки = "СменитьТему" + КонсольКода;
	Если СветлаяТема Тогда
		
		Тема = "bsl-white";
		Форма.Элементы[ИмяКнопки].Заголовок = "Темная";
		Форма.Элементы[ИмяКнопки].ЦветФона = WebЦвета.Черный;
		Форма.Элементы[ИмяКнопки].ЦветТекста = WebЦвета.Белый;
		
	Иначе
		
		Тема = "bsl-dark";
		Форма.Элементы[ИмяКнопки].Заголовок = "Светлая";
		Форма.Элементы[ИмяКнопки].ЦветФона = Новый Цвет();
		Форма.Элементы[ИмяКнопки].ЦветТекста = Новый Цвет();
		
	КонецЕсли;
	
	Форма.Элементы[КонсольКода].Документ.monaco.editor.setTheme(Тема);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

&НаСервере
Процедура СоздатьКонсоль(ЭлементАлгоритма, ЭлементРодитель, Форма) Экспорт
	
	ЭлементАлгоритма.Видимость = Ложь;
	
	ИмяРеквизита = ЭлементАлгоритма.Имя + "HTML";
	СоздатьРеквизит(Форма, ИмяРеквизита);
	
	СоздатьЭлемент(ИмяРеквизита, ЭлементРодитель, Форма);
	
	СоздатьКоманднуюПанель(ИмяРеквизита, Форма, ЭлементРодитель, ЭлементАлгоритма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РаботаСФайлами

&НаКлиенте
Процедура ПриПолученииКаталогаВременныхФайлов(ИмяКаталога, ДопПараметры) Экспорт
	
	ИдентификаторСессии = "_" + СтрЗаменить(Новый УникальныйИдентификатор, "-", "");
	КаталогИсходников = ИмяКаталога + ИдентификаторСессии + "\";
	
	ДополнительныеПараметры = Новый Структура("КаталогИсходников", КаталогИсходников);
	НачатьСозданиеКаталога(Новый ОписаниеОповещения("ПослеСозданияКаталога", ЭтотОбъект, ДополнительныеПараметры), КаталогИсходников);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСозданияКаталога(ИмяКаталога, ДопПараметры) Экспорт
	
	ФайлНаДиске = Новый Файл(ДопПараметры.КаталогИсходников);
	ДополнительныеПараметры = Новый Структура("КаталогИсходников", ДопПараметры.КаталогИсходников);
	ФайлНаДиске.НачатьПроверкуСуществования(Новый ОписаниеОповещения("ПослеПроверкиСуществованияКаталога", ЭтотОбъект, ДополнительныеПараметры));
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПроверкиСуществованияКаталога(Существует, ДопПараметры) Экспорт
	
	Если Существует Тогда
		
		ДополнительныеПараметры = Новый Структура("КаталогИсходников", ДопПараметры.КаталогИсходников);
		Оповещение = Новый ОписаниеОповещения("ПослеУдаленияВременныхФайлов", ЭтотОбъект, ДополнительныеПараметры);
		НачатьУдалениеФайлов(Оповещение, ДопПараметры.КаталогИсходников, "*.*");
		
	Иначе
		
		Расш1_ЖурналРегистрации.ДобавитьЗапись("Не удалось создать каталог для исходников.", "Ошибка");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеУдаленияВременныхФайлов(ДопПараметры) Экспорт
	
	АдресМакета = Расш1_ПередНачаломРаботыСистемы.ПриСозданииНаСервере();
	ДанныеМакета = ПолучитьИзВременногоХранилища(АдресМакета);
	ИмяФайла = ДопПараметры.КаталогИсходников + "bsl_console.zip";
	ДополнительныеПараметры = Новый Структура("КаталогИсходников", ДопПараметры.КаталогИсходников);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗаписиФайлаМакета", ЭтотОбъект, ДополнительныеПараметры);
	ДанныеМакета.НачатьЗапись(ОписаниеОповещения, ИмяФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписиФайлаМакета(ДопПараметры) Экспорт
	
	КаталогИсходников = ДопПараметры.КаталогИсходников;
	Попытка
		
		Файл = Новый ЧтениеZipФайла(КаталогИсходников + "bsl_console.zip");
		Файл.ИзвлечьВсе(КаталогИсходников);
		ИмяФайлаИсточника = КаталогИсходников + "index.html";
		ИмяФайлаПриемника = КаталогИсходников + Формат(ТекущаяУниверсальнаяДатаВМиллисекундах(), "ЧГ=0") + ".html";
		НачатьКопированиеФайла(Новый ОписаниеОповещения("ПослеКопированияФайлаИсточника", ЭтотОбъект), ИмяФайлаИсточника, ИмяФайлаПриемника);
		
	Исключение
		
		Расш1_ЖурналРегистрации.ДобавитьЗапись("Не удалось извлечь исходники работы с консолью кода. " + ОписаниеОшибки(), "Ошибка");
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеКопированияФайлаИсточника(СкопированныйФайл, ДопПараметры) Экспорт
	
	АдресКонсолиКода = СкопированныйФайл;
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура СоздатьРеквизит(Форма, ИмяРеквизита) Экспорт
	
	ТипРеквизита = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(0, ДопустимаяДлина.Переменная));
	Реквизит = Новый РеквизитФормы(ИмяРеквизита, ТипРеквизита);
	
	НовыеРеквизиты = Новый Массив;
	НовыеРеквизиты.Добавить(Реквизит);
	Форма.ИзменитьРеквизиты(НовыеРеквизиты);
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЭлемент(ИмяЭлемента, Родитель, Форма)
	
	НовыйЭлемент = Форма.Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), Родитель);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеHTMLДокумента;
	НовыйЭлемент.ПутьКДанным = ИмяЭлемента;
	НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	НовыйЭлемент.УстановитьДействие("ДокументСформирован", ИмяЭлемента + "Сформирован");
	
КонецПроцедуры

&НаСервере
Процедура СоздатьКоманднуюПанель(ЭлементАлгоритма, Форма, Родитель, ЭлементПеред)
	
	ЭлементыФормы = Форма.Элементы;
	КоманднаяПанель = 
		ЭлементыФормы.Вставить(ЭлементАлгоритма + "ПанельКоманд", Тип("ГруппаФормы"), Родитель, ЭлементПеред);
	
	// Создаем кнопку по смене темы
	Имя = "СменитьТему" + ЭлементАлгоритма;
	КомандаСменаТемы = СоздатьКоманду(Форма, Имя);
	ЭлементСменаТемы = ЭлементыФормы.Вставить(Имя, Тип("КнопкаФормы"), КоманднаяПанель);
	ЭлементСменаТемы.Заголовок = "Темная";
	ЭлементСменаТемы.ИмяКоманды = Имя;
	ЭлементСменаТемы.ЦветФона = WebЦвета.Черный;
	ЭлементСменаТемы.ЦветТекста = WebЦвета.Белый;
	
	// Создаем кнопку по заменить вхождения
	Имя = "ЗаменитьВхождения" + ЭлементАлгоритма;
	КомандаЗаменитьВхождения = СоздатьКоманду(Форма, Имя);
	КомандаЗаменитьВхождения.Картинка = БиблиотекаКартинок.Переименовать;
	ЭлементЗаменитьВхождения = 
		ЭлементыФормы.Вставить(Имя, Тип("КнопкаФормы"), КоманднаяПанель, ЭлементСменаТемы);
	ЭлементЗаменитьВхождения.Заголовок = "Заменить вхождения";
	ЭлементЗаменитьВхождения.ИмяКоманды = Имя;
	
КонецПроцедуры

&НаСервере
Функция СоздатьКоманду(Форма, Имя)
	
	НоваяКоманда = Форма.Команды.Добавить(Имя);
	НоваяКоманда.Действие = Имя;
	
	Возврат НоваяКоманда;
	
КонецФункции

#КонецОбласти
