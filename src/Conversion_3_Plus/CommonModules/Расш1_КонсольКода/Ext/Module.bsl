
#Область ПрограммныйИнтерфейс

Процедура ИзвлечьИсходники() Экспорт
	
	НачатьПолучениеКаталогаВременныхФайлов(Новый ОписаниеОповещения("ПриПолученииКаталогаВременныхФайлов", ЭтотОбъект));
	
КонецПроцедуры

Процедура ИнициализацияРедактора(ВнешнийОбъект, РеквизитОбъекта) Экспорт
	
	Инфо = Новый СистемнаяИнформация();
	ВнешнийОбъект.init(Инфо.ВерсияПриложения);
	
	// Очистим элемент от предыдущих значений.
	ВнешнийОбъект.eraseText();
	// Прочитаем текст из реквизита.
	ВнешнийОбъект.setText(РеквизитОбъекта);
	
КонецПроцедуры

Процедура УстановитьТемуКонсоли(Форма, КонсольКода, СветлаяТема = Истина) Экспорт
	
	Если СветлаяТема Тогда
		Тема = "bsl-white";
	Иначе
		Тема = "bsl-dark";
	КонецЕсли;
	
	Форма.Элементы[КонсольКода].Документ.monaco.editor.setTheme(Тема);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПриПолученииКаталогаВременныхФайлов(ИмяКаталога, ДопПараметры) Экспорт
	
	ИдентификаторСессии = "_" + СтрЗаменить(Новый УникальныйИдентификатор, "-", "");
	КаталогИсходников = ИмяКаталога + ИдентификаторСессии + "\";
	
	ДополнительныеПараметры = Новый Структура("КаталогИсходников", КаталогИсходников);
	НачатьСозданиеКаталога(Новый ОписаниеОповещения("ПослеСозданияКаталога", ЭтотОбъект, ДополнительныеПараметры), КаталогИсходников);
	
КонецПроцедуры

Процедура ПослеСозданияКаталога(ИмяКаталога, ДопПараметры) Экспорт
	
	ФайлНаДиске = Новый Файл(ДопПараметры.КаталогИсходников);
	ДополнительныеПараметры = Новый Структура("КаталогИсходников", ДопПараметры.КаталогИсходников);
	ФайлНаДиске.НачатьПроверкуСуществования(Новый ОписаниеОповещения("ПослеПроверкиСуществованияКаталога", ЭтотОбъект, ДополнительныеПараметры));
	
КонецПроцедуры

Процедура ПослеПроверкиСуществованияКаталога(Существует, ДопПараметры) Экспорт
	
	Если Существует Тогда
		
		ДополнительныеПараметры = Новый Структура("КаталогИсходников", ДопПараметры.КаталогИсходников);
		Оповещение = Новый ОписаниеОповещения("ПослеУдаленияВременныхФайлов", ЭтотОбъект, ДополнительныеПараметры);
		НачатьУдалениеФайлов(Оповещение, ДопПараметры.КаталогИсходников, "*.*");
		
	Иначе
		
		Расш1_ЖурналРегистрации.ДобавитьЗапись("Не удалось создать каталог для исходников.", "Ошибка");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеУдаленияВременныхФайлов(ДопПараметры) Экспорт
	
	АдресМакета = Расш1_ПередНачаломРаботыСистемы.ПриСозданииНаСервере();
	ДанныеМакета = ПолучитьИзВременногоХранилища(АдресМакета);
	ИмяФайла = ДопПараметры.КаталогИсходников + "bsl_console.zip";
	ДополнительныеПараметры = Новый Структура("КаталогИсходников", ДопПараметры.КаталогИсходников);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗаписиФайлаМакета", ЭтотОбъект, ДополнительныеПараметры);
	ДанныеМакета.НачатьЗапись(ОписаниеОповещения, ИмяФайла);
	
КонецПроцедуры

Процедура ПослеЗаписиФайлаМакета(ДопПараметры) Экспорт
	
	КаталогИсходников = ДопПараметры.КаталогИсходников;
	Попытка
		
		Файл = Новый ЧтениеZipФайла(КаталогИсходников + "bsl_console.zip");
		Файл.ИзвлечьВсе(КаталогИсходников);
		ИмяФайлаИсточника = КаталогИсходников + "index.html";
		ИмяФайлаПриемника = КаталогИсходников + Формат(ТекущаяУниверсальнаяДатаВМиллисекундах(), "ЧГ=0") + ".html";
		НачатьКопированиеФайла(Новый ОписаниеОповещения("ПослеКопированияФайлаИсточника", ЭтотОбъект), ИмяФайлаИсточника, ИмяФайлаПриемника);
		
	Исключение
		
		Расш1_ЖурналРегистрации.ДобавитьЗапись("Не удалось извлечь исходники работы с консолью кода. " + ОписаниеОшибки(), "Ошибка");
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ПослеКопированияФайлаИсточника(СкопированныйФайл, ДопПараметры) Экспорт
	
	АдресКонсолиКода = СкопированныйФайл;
	
КонецПроцедуры

#КонецОбласти
