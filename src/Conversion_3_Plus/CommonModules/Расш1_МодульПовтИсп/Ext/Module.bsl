
#Область ПрограммныйИнтерфейс

// Возвращает описание коллекции метаданных конфигурации JSON.
// 
// Возвращаемое значение:
//   - Соответствие.
//
Функция НовыеИменаКоллекцииМетаданныхJSON() Экспорт
	
	СоответствиеИмен = Новый Соответствие();
	СоответствиеИмен.Вставить("справочники", "catalogs");
	СоответствиеИмен.Вставить("catalogs", "catalogs");
	СоответствиеИмен.Вставить("документы", "documents");
	СоответствиеИмен.Вставить("documents", "documents");
	СоответствиеИмен.Вставить("регистрысведений", "infoRegs");
	СоответствиеИмен.Вставить("informationregisters", "infoRegs");
	СоответствиеИмен.Вставить("регистрынакопления", "accumRegs");
	СоответствиеИмен.Вставить("accumulationregisters", "accumRegs");
	СоответствиеИмен.Вставить("регистрыбухгалтерии", "accountRegs");
	СоответствиеИмен.Вставить("accountingregisters", "accountRegs");
	СоответствиеИмен.Вставить("регистрырасчета", "calcRegs");
	СоответствиеИмен.Вставить("calculationregisters", "calcRegs");
	СоответствиеИмен.Вставить("обработки", "dataProc");
	СоответствиеИмен.Вставить("dataprocessors", "dataProc");
	СоответствиеИмен.Вставить("отчеты", "reports");
	СоответствиеИмен.Вставить("reports", "reports");
	СоответствиеИмен.Вставить("перечисления", "enums");
	СоответствиеИмен.Вставить("enums", "enums");
	СоответствиеИмен.Вставить("планысчетов", "сhartsOfAccounts");
	СоответствиеИмен.Вставить("chartsofaccounts", "сhartsOfAccounts");
	СоответствиеИмен.Вставить("бизнеспроцессы", "businessProcesses");
	СоответствиеИмен.Вставить("businessprocesses", "businessProcesses");
	СоответствиеИмен.Вставить("задачи", "tasks");
	СоответствиеИмен.Вставить("tasks", "tasks");
	СоответствиеИмен.Вставить("планыобмена", "exchangePlans");
	СоответствиеИмен.Вставить("exchangeplans", "exchangePlans");
	СоответствиеИмен.Вставить("планывидовхарактеристик", "chartsOfCharacteristicTypes");
	СоответствиеИмен.Вставить("chartsofcharacteristictypes", "chartsOfCharacteristicTypes");
	СоответствиеИмен.Вставить("планывидоврасчета", "chartsOfCalculationTypes");
	СоответствиеИмен.Вставить("chartsofcalculationtypes", "chartsOfCalculationTypes");
	СоответствиеИмен.Вставить("константы", "constants");
	СоответствиеИмен.Вставить("constants", "constants");
	
	Возврат СоответствиеИмен;
	
КонецФункции

// Возвращает описание коллекции метаданных конфигурации.
// 
// Возвращаемое значение:
//   - Соответствие.
//
Функция НовыеИменаКоллекцииМетаданных() Экспорт
	
	СоответствиеИмен = Новый Соответствие();
	
	СоответствиеИмен.Вставить("справочники", "справочники");
	СоответствиеИмен.Вставить("catalogs", "справочники");
	
	СоответствиеИмен.Вставить("документы", "документы");
	СоответствиеИмен.Вставить("documents", "документы");
	
	СоответствиеИмен.Вставить("регистрысведений", "регистрысведений");
	СоответствиеИмен.Вставить("informationregisters", "регистрысведений");
	
	СоответствиеИмен.Вставить("регистрынакопления", "регистрынакопления");
	СоответствиеИмен.Вставить("accumulationregisters", "регистрынакопления");
	
	СоответствиеИмен.Вставить("регистрыбухгалтерии", "регистрыбухгалтерии");
	СоответствиеИмен.Вставить("accountingregisters", "регистрыбухгалтерии");
	
	СоответствиеИмен.Вставить("регистрырасчета", "регистрырасчета");
	СоответствиеИмен.Вставить("calculationregisters", "регистрырасчета");
	
	СоответствиеИмен.Вставить("обработки", "обработки");
	СоответствиеИмен.Вставить("dataprocessors", "обработки");
	
	СоответствиеИмен.Вставить("отчеты", "отчеты");
	СоответствиеИмен.Вставить("reports", "отчеты"); 
	
	СоответствиеИмен.Вставить("перечисления", "перечисления");
	СоответствиеИмен.Вставить("enums", "перечисления");
	
	СоответствиеИмен.Вставить("планысчетов", "планысчетов");
	СоответствиеИмен.Вставить("chartsofaccounts", "планысчетов");
	
	СоответствиеИмен.Вставить("бизнеспроцессы", "бизнеспроцессы");
	СоответствиеИмен.Вставить("businessprocesses", "бизнеспроцессы");
	
	СоответствиеИмен.Вставить("задачи", "задачи");
	СоответствиеИмен.Вставить("tasks", "задачи");
	
	СоответствиеИмен.Вставить("планыобмена", "планыобмена");
	СоответствиеИмен.Вставить("exchangeplans", "планыобмена");
	
	СоответствиеИмен.Вставить("планывидовхарактеристик", "планывидовхарактеристик");
	СоответствиеИмен.Вставить("chartsofcharacteristictypes", "планывидовхарактеристик");
	
	СоответствиеИмен.Вставить("планывидоврасчета", "планывидоврасчета");
	СоответствиеИмен.Вставить("chartsofcalculationtypes", "планывидоврасчета");
	
	СоответствиеИмен.Вставить("константы", "константы");
	СоответствиеИмен.Вставить("constants", "константы");
	
	Возврат СоответствиеИмен;
	
КонецФункции

// Возвращает признак что объект метаданных имеет табличную часть.
//
// Параметры:
//  ИмяКоллекции - Стока - имя коллекции.
// 
// Возвращаемое значение:
//   - Булево
//
Функция ОбъектМетаданныхИмеетТЧ(ИмяКоллекции) Экспорт
	
	Объекты = Новый Массив();
	Объекты.Добавить("справочники");
	Объекты.Добавить("catalogs");
	Объекты.Добавить("документы");
	Объекты.Добавить("documents");
	Объекты.Добавить("бизнеспроцессы");
	Объекты.Добавить("планывидоврасчета");
	Объекты.Добавить("задачи");
	Объекты.Добавить("планывидовхарактеристик");
	
	Возврат Объекты.Найти(ИмяКоллекции) <> Неопределено;
	
КонецФункции

// Возвращает признак что объект метаданных имеет измерения.
//
// Параметры:
//  ИмяКоллекции - Строка - имя коллекции.
// 
// Возвращаемое значение:
//   - Булево
//
Функция ОбъектМетаданныхИмеетИзмерения(ИмяКоллекции) Экспорт
	
	Объекты = Новый Массив();
	Объекты.Добавить("регистрысведений");
	Объекты.Добавить("регистрынакопления");
	Объекты.Добавить("регистрыбухгалтерии");
	Объекты.Добавить("регистрырасчета");
	
	Возврат Объекты.Найти(ИмяКоллекции) <> Неопределено;
	
КонецФункции

#КонецОбласти