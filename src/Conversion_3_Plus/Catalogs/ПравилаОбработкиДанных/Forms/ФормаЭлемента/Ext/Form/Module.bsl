
#Область ОписаниеПеременных

&НаКлиенте
Перем КонсольКодаПриОбработке;

&НаКлиенте
Перем КонсольКодаВыборкаДанных;

&НаКлиенте
Перем ПриОбработкеHTMLСфомирован;

&НаКлиенте
Перем ВыборкаДанныхHTMLСформирован;

&НаКлиенте
Перем СветлаяТемаАлгоритмПриОбработке;

&НаКлиенте
Перем СветлаяТемаАлгоритмВыборкаДанных;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура Расш1_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	Расш1_КонсольКода.СоздатьКонсоль(Элементы.АлгоритмПриОбработке, Элементы.Страница_ПриОбработке, ЭтотОбъект);
	Расш1_КонсольКода.СоздатьКонсоль(Элементы.АлгоритмВыборкаДанных, Элементы.Страница_ВыборкаДанных, ЭтотОбъект);
	Расш1_КонсольКода.СоздатьРеквизит(ЭтотОбъект, "Конвертация");
	
	// Создаем реквизит для хранения описания метаданных. Нужно хранить т.к. мы подаем это описание потом при формировании консолек.
	Расш1_КонсольКода.СоздатьРеквизит(ЭтотОбъект, "ОписаниеМетаданныхJSON");
	
	Элементы.НаправлениеАлгоритмВыборкаДанныхHTML.Видимость = Ложь;
	Элементы.НаправлениеАлгоритмПриОбработкеHTML.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура Расш1_ПриОткрытииПосле(Отказ)
	
	ЭтотОбъект[Элементы.АлгоритмПриОбработке.Имя + "HTML"] = АдресКонсолиКода;
	
	Если Объект.ИспользоватьДляОтправки Тогда
		ЭтотОбъект[Элементы.АлгоритмВыборкаДанных.Имя + "HTML"] = АдресКонсолиКода;
	Иначе
		ВыборкаДанныхHTMLСформирован = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Расш1_ПередЗаписьюПосле(Отказ, ПараметрыЗаписи)
	
	// Запишем новый текст в реквизиты.
	Объект.АлгоритмПриОбработке = КонсольКодаПриОбработке.getText();
	Если Объект.ИспользоватьДляОтправки Тогда
		Объект.АлгоритмВыборкаДанных = КонсольКодаВыборкаДанных.getText();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АлгоритмПриОбработкеHTMLСформирован(Элемент)
	
	КонсольКодаПриОбработке = Элемент.Документ.defaultView;
	Расш1_КонсольКода.ИнициализацияРедактора(КонсольКодаПриОбработке, Объект.АлгоритмПриОбработке);
	ПриОбработкеHTMLСфомирован = Истина;
	ОпределитьКонвертацию();
	
КонецПроцедуры

&НаКлиенте
Процедура АлгоритмПриОбработкеHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	Расш1_КонсольКода.ПриНажатии(ЭтотОбъект, ДанныеСобытия);
КонецПроцедуры

&НаКлиенте
Процедура АлгоритмВыборкаДанныхHTMLСформирован(Элемент)
	
	КонсольКодаВыборкаДанных = Элемент.Документ.defaultView;
	Расш1_КонсольКода.ИнициализацияРедактора(КонсольКодаВыборкаДанных, Объект.АлгоритмВыборкаДанных);
	ВыборкаДанныхHTMLСформирован = Истина;
	ОпределитьКонвертацию();
	
КонецПроцедуры

&НаКлиенте
Процедура АлгоритмВыборкаДанныхHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	Расш1_КонсольКода.ПриНажатии(ЭтотОбъект, ДанныеСобытия);
КонецПроцедуры

&НаКлиенте
Процедура Расш1_ИспользоватьДляОтправкиПриИзмененииПосле(Элемент)
	ОбновитьОписаниеМетаданных();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СменитьТемуАлгоритмПриОбработкеHTML(Команда)
	Расш1_КонсольКода.СменитьТему(ЭтотОбъект, Элементы.АлгоритмПриОбработке.Имя + "HTML", СветлаяТемаАлгоритмПриОбработке);
КонецПроцедуры

&НаКлиенте
Процедура СменитьТемуАлгоритмВыборкаДанныхHTML(Команда)
	Расш1_КонсольКода.СменитьТему(ЭтотОбъект, Элементы.АлгоритмВыборкаДанных.Имя + "HTML", СветлаяТемаАлгоритмВыборкаДанных);
КонецПроцедуры

&НаКлиенте
Процедура ЗаменитьВхожденияАлгоритмПриОбработкеHTML()
	КонсольКодаПриОбработке.editor.trigger("", "editor.action.changeAll");
КонецПроцедуры

&НаКлиенте
Процедура ЗаменитьВхожденияАлгоритмВыборкаДанных()
	КонсольКодаВыборкаДанных.editor.trigger("", "editor.action.changeAll");
КонецПроцедуры

&НаКлиенте
Процедура ОтправкаАлгоритмПриОбработкеHTML(Команда)
	ПриИзмененииНаправления(Команда);
КонецПроцедуры

&НаКлиенте
Процедура ПолучениеАлгоритмПриОбработкеHTML(Команда)
	ПриИзмененииНаправления(Команда);
КонецПроцедуры

&НаКлиенте
Процедура ОтправкаАлгоритмВыборкаДанныхHTML(Команда)
	ПриИзмененииНаправления(Команда);
КонецПроцедуры

&НаКлиенте
Процедура ПолучениеАлгоритмВыборкаДанныхHTML(Команда)
	ПриИзмененииНаправления(Команда);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОпределитьКонвертацию()
	
	Если ПриОбработкеHTMLСфомирован И ВыборкаДанныхHTMLСформирован Тогда
		
		Если СписокКонвертаций.Количество() > 1 Тогда
			Расш1_КонсольКода.ПоискНаименованияТекущейКонвертации(ЭтотОбъект.ВладелецФормы, ЭтотОбъект);
		Иначе
			ЭтотОбъект["Конвертация"] = СписокКонвертаций[0].Значение;
		КонецЕсли;
		
		ОбновитьОписаниеМетаданных();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОписаниеМетаданных()
	
	Если Объект.ИспользоватьДляОтправки Тогда
		Направление = "Отправка";
	Иначе
		Направление = "Получение";
	КонецЕсли;
	
	ЭтотОбъект["ОписаниеМетаданныхJSON"] = ПолучитьОписаниеМетаданныхJSON(ЭтотОбъект["Конвертация"], Объект.ОбъектВыборки, Направление);
	ОбновитьОписаниеМетаданныхВоВсехКонсоляхОбработчиков();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОписаниеМетаданныхJSON(Знач Конвертация, Знач ОбъектВыборки, Знач Направление)
	
	ОписаниеМетаданных = Расш1_КоллекцияМетаданных.ПолучитьОписаниеМетаданных(Справочники.Конвертации.НайтиПоНаименованию(Конвертация));
	
	// Заполнение общих параметров обработчиков ПОД.
	ПользовательскиеОбъекты = Новый Структура;
	КомпонентыОбмена = Справочники.Конфигурации.ПолучитьОписаниеКомпонентыОбмена(Направление);
	ПользовательскиеОбъекты.Вставить("КомпонентыОбмена", КомпонентыОбмена);
	
	Если Не ПустаяСтрока(ОбъектВыборки) Тогда
		ДанныеИБ = Справочники.Конфигурации.ПолучитьОписаниеДанныеИБ(ОписаниеМетаданных, ОбъектВыборки);
		ПользовательскиеОбъекты.Вставить("ДанныеИБ", ДанныеИБ);
	КонецЕсли;
	
	ОписаниеМетаданных.Вставить("customObjects", ПользовательскиеОбъекты);
	
	ОписаниеМетаданныхJSON = Расш1_КоллекцияМетаданных.ПолучитьОписаниеМетаданныхJSON(ОписаниеМетаданных);
	
	Возврат ОписаниеМетаданныхJSON;
	
КонецФункции

&НаКлиенте
Процедура ПриИзмененииНаправления(Команда)
	
	ОбновитьОписаниеМетаданныхПоНаправлению(Команда.Имя);
	ОбновитьОписаниеМетаданныхВоВсехКонсоляхОбработчиков();
	Элементы[Команда.Имя].Родитель.Заголовок = Элементы[Команда.Имя].Заголовок;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОписаниеМетаданныхПоНаправлению(ИмяКоманды)
	
	Направление = ЭтотОбъект.Команды.Найти(ИмяКоманды).Заголовок;
	ЭтотОбъект["ОписаниеМетаданныхJSON"] = ПолучитьОписаниеМетаданныхJSON(ЭтотОбъект["Конвертация"], Объект.ОбъектВыборки, Направление);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОписаниеМетаданныхВоВсехКонсоляхОбработчиков()
	
	КонсольКодаПриОбработке.updateMetadata(ЭтотОбъект["ОписаниеМетаданныхJSON"]);
	
	Если Объект.ИспользоватьДляОтправки Тогда
		КонсольКодаВыборкаДанных.updateMetadata(ЭтотОбъект["ОписаниеМетаданныхJSON"]);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Клиент Тогда
	ПриОбработкеHTMLСфомирован = Ложь;
	ВыборкаДанныхHTMLСформирован = Ложь;
	СветлаяТемаАлгоритмПриОбработке = Истина;
	СветлаяТемаАлгоритмВыборкаДанных = Истина;
#КонецЕсли
