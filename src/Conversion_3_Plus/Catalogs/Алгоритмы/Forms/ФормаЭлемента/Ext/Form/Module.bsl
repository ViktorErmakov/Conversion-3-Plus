#Область ОписаниеПеременных

&НаКлиенте
Перем КонсольКода;

&НаКлиенте
Перем СветлаяТема;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура Расш1_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	Если ЭтоКонвертацияXDTO Тогда
		
		Расш1_КонсольКода.СоздатьКонсоль(Элементы.Алгоритм, ЭтотОбъект, ЭтотОбъект);
		
		Расш1_КонсольКода.СоздатьРеквизит(ЭтотОбъект, "Конвертация", "СправочникСсылка.Конвертации");
		ЭтотОбъект["Конвертация"] = Параметры.Конвертация;
		
		Расш1_КонсольКода.СоздатьРеквизит(ЭтотОбъект, "Направление", "Строка");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Расш1_ПриОткрытииПосле(Отказ)
	
	Если ЭтоКонвертацияXDTO Тогда
		ЭтотОбъект[Элементы.Алгоритм.Имя + "HTML"] = АдресКонсолиКода;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Расш1_ПередЗаписьюПосле(Отказ, ПараметрыЗаписи)
	
	Если ЭтоКонвертацияXDTO Тогда
		Объект.Алгоритм = КонсольКода.getText();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АлгоритмHTMLСформирован(Элемент)
	
	КонсольКода = Элемент.Документ.defaultView;
	Расш1_КонсольКода.ИнициализацияРедактора(КонсольКода, Объект.Алгоритм);
	ЗаполнитьПараметрыОбработчиков();
	
КонецПроцедуры

&НаКлиенте
Процедура АлгоритмHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	Расш1_КонсольКода.ПриНажатии(ЭтотОбъект, ДанныеСобытия, Элемент);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СменитьТемуАлгоритмHTML(Команда)
	Расш1_КонсольКода.СменитьТему(ЭтотОбъект, Элементы.Алгоритм.Имя + "HTML", СветлаяТема);
КонецПроцедуры

&НаКлиенте
Процедура ЗаменитьВхожденияАлгоритмHTML()
	КонсольКода.editor.trigger("", "editor.action.changeAll");
КонецПроцедуры

&НаКлиенте
Процедура ОтправкаАлгоритмHTML(Команда)
	ПриИзмененииНаправления(Команда);
КонецПроцедуры

&НаКлиенте
Процедура ПолучениеАлгоритмHTML(Команда)
	ПриИзмененииНаправления(Команда);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриИзмененииНаправления(Команда)
	
	ЗаполнитьПараметрыОбработчиков(Команда.Имя);
	
	Элементы[Команда.Имя].Родитель.Заголовок = Элементы[Команда.Имя].Заголовок;
	Элементы[Команда.Имя].Родитель.Картинка = Элементы[Команда.Имя].Картинка;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПараметрыОбработчиков(ИмяКоманды = "")
	
	ОписаниеПользовательскихОбъектовJSON = ПолучитьОписаниеПараметровJSON(ИмяКоманды);
	Если ПустаяСтрока(ОписаниеПользовательскихОбъектовJSON) Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьОписаниеМетаданныхВоВсехКонсоляхОбработчиков(ОписаниеПользовательскихОбъектовJSON);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОписаниеПараметровJSON(Знач ИмяКоманды)
	
	Направление = "";
	ОписаниеПользовательскихОбъектовJSON = "";
	
	Если Не ПустаяСтрока(ИмяКоманды) Тогда
		НайденнаяКоманда = ЭтотОбъект.Команды.Найти(ИмяКоманды);
		Если НайденнаяКоманда <> Неопределено Тогда
			Направление = НайденнаяКоманда.Заголовок;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ПустаяСтрока(Направление) Тогда
		ЭтотОбъект["Направление"] = Направление;
	КонецЕсли;
	
	ПользовательскиеОбъекты = Новый Структура;
	
	Если Не ПустаяСтрока(ЭтотОбъект["Направление"]) Тогда
		КомпонентыОбмена = Расш1_КоллекцияМетаданных.ПолучитьОписаниеКомпонентыОбмена(ЭтотОбъект["Направление"]);
		ПользовательскиеОбъекты.Вставить("КомпонентыОбмена", КомпонентыОбмена);
	КонецЕсли;
	
	ПараметрыАлгоритма = Объект.Параметры;
	Если Не ПустаяСтрока(ПараметрыАлгоритма) Тогда
		СписокПараметров = СтрРазделить(ПараметрыАлгоритма, ",", Ложь);
		Для Каждого Параметр Из СписокПараметров Цикл
			ПозицияЗнакаРавно = СтрНайти(Параметр, "=");
			Если ПозицияЗнакаРавно = 0 Тогда
				ПользовательскиеОбъекты.Вставить(СокрЛП(Параметр), "");
			Иначе
				ПользовательскиеОбъекты.Вставить(СокрЛП(Лев(Параметр, ПозицияЗнакаРавно - 1)), "");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ОписаниеПользовательскихОбъектов = Новый Структура;
	ОписаниеПользовательскихОбъектов.Вставить("customObjects", ПользовательскиеОбъекты);
	
	ОписаниеПользовательскихОбъектовJSON = 
		Расш1_КоллекцияМетаданных.ПолучитьОписаниеМетаданныхJSON(ОписаниеПользовательскихОбъектов);
	
	Возврат ОписаниеПользовательскихОбъектовJSON;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьОписаниеМетаданныхВоВсехКонсоляхОбработчиков(ОписаниеПараметровJSON = Неопределено)
	
	АдресОбновления = "";
	РезультатОбновления = КонсольКода.updateMetadata(ОписаниеПараметровJSON, АдресОбновления);
	
	Если ТипЗнч(РезультатОбновления) = Тип("Булево") Тогда
		КонсольКода.triggerSuggestions();
	Иначе
		Ошибка = РезультатОбновления.errorDescription;
		ОбщегоНазначенияКлиент.СообщитьПользователю(Ошибка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Клиент Тогда
	СветлаяТема = Истина;
#КонецЕсли
